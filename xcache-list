#!/usr/bin/python

import marshal, os
from optparse import OptionParser
from xcache import *

def filesize(path):
	if os.path.exists(path):
		s = os.path.getsize(path)
		if s > 1024*1024:
			return '%.1fM'%(s/1024./1024.)
		elif s > 1024:
			return '%.1fK'%(s/1024.)
		return '%dB'%s
	return ''

if __name__ == '__main__':
	parser = OptionParser()
	parser.add_option('-w', '--web', action="store_true", dest='w', help='show entrys in pretty HTML format')
	opt, args = parser.parse_args()
	if opt.w:
		print '<table border=1>'
		print '<tr><th>stat</th><th>size</th><th>start</th><th>url</th><th>filename</th></tr>'
	for i in os.listdir(cache):
		m = XCacheInfo(cache+i+'/')
		if opt.w:
			print '<tr>'
			c = {'error':'red', 'cached':'green', 'caching':'gray', 'processing':'yellow'}
			print '<th><font color=%s>%s</font></th>'%(c[m.stat],m.stat)
			print '<th>%s</th>'%filesize(m.short+'pcap')
			print '<th>%s</th>'%m.start
			print '<th><a href=%s>%s</a></th>'%(
					'/xcache/'+i+'/file',
					m.ext[1:] if m.stat == 'cached' else ''
					)
			print '<th>%s</th>'%m.path
			print '</tr>'
		else:
			print m
			print '\tpcap', filesize(m.short+'pcap')
			print '\tfile', filesize(m.short+'file')
			print '\t', m.short+'file'+m.ext
	if opt.w:
		print '</table>'

